{
	"folders": [
		{
			"path": "."
		},
		{
			"path": "./firmware",
			"name": "Firmware"
		},
		{
			"path": "./backend",
			"name": "Backend"
		},
		{
			"path": "./frontend",
			"name": "Frontend"
		},
		{
			"path": "./docs",
			"name": "Docs"
		}
	],
	"settings": {
		// General settings
		"editor.formatOnSave": true,
		"editor.codeActionsOnSave": {
			"source.fixAll": true
		},
		"files.trimTrailingWhitespace": true,
		"files.insertFinalNewLine": true,
		// Python settings
		"[python]": {
			"editor.rulers": [
				88
			],
			"editor.tabSize": 4
		},
		"python.analysis.typeCheckingMode": "basic",
		"python.testing.pytestEnabled": true,
		"python.formatting.provider": "black",
		// JavaScript/TypeScript settings
		"[javascript]": {
			"editor.defaultFormatter": "esbenp.prettier-vscode",
			"editor.tabSize": 2
		},
		"[typescript]": {
			"editor.defaultFormatter": "esbenp.prettier-vscode",
			"editor.tabSize": 2
		},
		"[json]": {
			"editor.defaultFormatter": "esbenp.prettier-vscode"
		},
		// Zephyr/C settings
		"[c]": {
			"editor.defaultFormatter": "ms-vscode.cpptools",
			"editor.tabSize": 8
		},
		// Markdown settings
		"[markdown]": {
			"editor.defaultFormatter": "esbenp.prettier-vscode",
			"editor.wordWrap": "on"
		},
		// Remote settings
		"remote.containers.defaultExtensions": [
			"ms-vscode-remote.remote-containers",
			"ms-vscode-remote.remote-ssh"
		],
		// Additional formatter settings
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"prettier.singleQuote": true,
		"prettier.trailingComma": "es5",
		"prettier.printWidth": 100,
		// Python formatting
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		// C/C++ formatting
		"C_Cpp.clang_format_style": "file",
		"C_Cpp.formatting": "clangFormat",
		// DeviceTree
		"devicetree.formatter.enable": true,
		"devicetree.formatter.alignProperties": true,
		// CMake
		"cmake.configureOnOpen": true,
		"cmake.configureArgs": [
			"-DBOARD=nrf52840dk_nrf52840"
		],
		// Serial Monitor
		"serialmonitor.autoconnect": false,
		"serialmonitor.baudrate": 115200
	},
	"extensions": {
		"recommendations": [
			// Python
			"ms-python.python",
			"ms-python.vscode-pylance",
			"ms-python.black-formatter",
			"ms-python.isort",
			"ms-python.debugpy",
			"anysphere.pyright",
			"njpwerner.autodocstring",
			"mikoz.black-py"
			// JavaScript/TypeScript
			"dbaeumer.vscode-eslint",
			"esbenp.prettier-vscode",
			"dsznajder.es7-react-js-snippets",
			// Zephyr/C
			"ms-vscode.cpptools",
			"ms-vscode.cmake-tools",
			"ms-vscode.cpptools-extension-pack",
			"ms-vscode.cpptools-themes",
			"mylonics.zephyr-ide",
			"mylonics.zephyr-ide-extension-pack",
			"nordic-semiconductor.nrf-connect",
			"nordic-semiconductor.nrf-connect-extension-pack",
			"nordic-semiconductor.nrf-devicetree",
			"nordic-semiconductor.nrf-kconfig",
			"nordic-semiconductor.nrf-terminal",
			"trond-snekvik.devicetree",
			"trond-snekvik.gnu-mapfiles",
			"trond-snekvik.kconfig-lang",
			"twxs.cmake",
			"ms-vscode.vscode-serial-monitor",
			"mcu-debug.debug-tracker-vscode",
			"mcu-debug.memory-view",
			"mcu-debug.peripheral-viewer",
			"mcu-debug.rtos-views",
			"marus25.cortex-debug",
			// General
			"eamodio.gitlens",
			"github.copilot",
			"github.vscode-github-actions",
			"github.vscode-pull-request-github",
			"yzhang.markdown-all-in-one",
			"davidanson.vscode-markdownlint",
			"gruntfuggly.todo-tree",
			"streetsidesoftware.code-spell-checker",
			"ms-azuretools.vscode-docker",
			"mechatroner.rainbow-csv",
			"vivaxy.vscode-conventional-commits"
		]
	},
	"launch": {
		"version": "0.2.0",
		"configurations": [
			{
				"name": "Python: Current File",
				"type": "python",
				"request": "launch",
				"program": "${file}",
				"console": "integratedTerminal"
			},
			{
				"name": "Node: Current File",
				"type": "node",
				"request": "launch",
				"program": "${file}"
			}
		]
	},
	"tasks": {
		"version": "2.0.0",
		"tasks": [
			{
				"label": "Start Frontend Dev",
				"type": "shell",
				"command": "cd frontend/expo-app && npm run start",
				"problemMatcher": []
			},
			{
				"label": "Start Python Backend",
				"type": "shell",
				"command": "cd backend/python-service && poetry run python src/main.py",
				"problemMatcher": []
			},
			{
				"label": "Start Node Backend",
				"type": "shell",
				"command": "cd backend/node-service && npm run dev",
				"problemMatcher": []
			},
			{
				"label": "Build Firmware",
				"type": "shell",
				"command": "west build",
				"options": {
					"cwd": "${workspaceFolder}/firmware/zephyr-app"
				},
				"problemMatcher": [
					"$gcc"
				]
			}
		]
	}
}